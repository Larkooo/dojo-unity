
// <auto-generated>
//  This code was generated by the following tool on 2023-12-19 14:51:00 GMT-05:00:
//      https://github.com/bottlenoselabs/c2cs (v0.0.0.0)
//
//  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ReSharper disable All

#region Template
#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS8981
using bottlenoselabs.C2CS.Runtime;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using System.Linq;
#endregion

namespace dojo_bindings
{

    public static unsafe partial class dojo
    {
        private const string LibraryName = "torii_c";

        #region API

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "account_address", CallingConvention = CallingConvention.Cdecl)]
        public static extern FieldElement account_address(Account* account);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "account_chain_id", CallingConvention = CallingConvention.Cdecl)]
        public static extern FieldElement account_chain_id(Account* account);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "account_execute_raw", CallingConvention = CallingConvention.Cdecl)]
        public static extern Result_bool account_execute_raw(Account* account, Call* calldata, UIntPtr calldata_len);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "account_free", CallingConvention = CallingConvention.Cdecl)]
        public static extern void account_free(Account* account);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "account_new", CallingConvention = CallingConvention.Cdecl)]
        public static extern Result_____Account account_new(CJsonRpcClient* rpc, FieldElement private_key, CString address);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "account_set_block_id", CallingConvention = CallingConvention.Cdecl)]
        public static extern void account_set_block_id(Account* account, BlockId block_id);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "carray_free", CallingConvention = CallingConvention.Cdecl)]
        public static extern void carray_free(void* data, UIntPtr data_len);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_add_models_to_sync", CallingConvention = CallingConvention.Cdecl)]
        public static extern Result_bool client_add_models_to_sync(ToriiClient* client, KeysClause* models, UIntPtr models_len);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_entities", CallingConvention = CallingConvention.Cdecl)]
        public static extern Result_CArray_Entity client_entities(ToriiClient* client, Query* query);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_free", CallingConvention = CallingConvention.Cdecl)]
        public static extern void client_free(ToriiClient* t);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_metadata", CallingConvention = CallingConvention.Cdecl)]
        public static extern WorldMetadata client_metadata(ToriiClient* client);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_model", CallingConvention = CallingConvention.Cdecl)]
        public static extern Result_COption_____Ty client_model(ToriiClient* client, KeysClause* keys);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_new", CallingConvention = CallingConvention.Cdecl)]
        public static extern Result_____ToriiClient client_new(CString torii_url, CString rpc_url, CString world, KeysClause* entities, UIntPtr entities_len);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_on_entity_state_update", CallingConvention = CallingConvention.Cdecl)]
        public static extern Result_bool client_on_entity_state_update(ToriiClient* client, FieldElement* entities, UIntPtr entities_len, FnPtr_FieldElement_CArrayModel_Void callback);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_on_sync_model_update", CallingConvention = CallingConvention.Cdecl)]
        public static extern Result_bool client_on_sync_model_update(ToriiClient* client, KeysClause model, FnPtr_Void callback);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_remove_models_to_sync", CallingConvention = CallingConvention.Cdecl)]
        public static extern Result_bool client_remove_models_to_sync(ToriiClient* client, KeysClause* models, UIntPtr models_len);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_start_subscription", CallingConvention = CallingConvention.Cdecl)]
        public static extern Result_bool client_start_subscription(ToriiClient* client);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_subscribed_models", CallingConvention = CallingConvention.Cdecl)]
        public static extern CArray_KeysClause client_subscribed_models(ToriiClient* client);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "entity_free", CallingConvention = CallingConvention.Cdecl)]
        public static extern void entity_free(Entity* entity);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "error_free", CallingConvention = CallingConvention.Cdecl)]
        public static extern void error_free(Error* error);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "felt_from_hex_be", CallingConvention = CallingConvention.Cdecl)]
        public static extern Result_FieldElement felt_from_hex_be(CString hex);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "jsonrpc_client_free", CallingConvention = CallingConvention.Cdecl)]
        public static extern void jsonrpc_client_free(CJsonRpcClient* rpc);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "jsonrpc_client_new", CallingConvention = CallingConvention.Cdecl)]
        public static extern Result_____CJsonRpcClient jsonrpc_client_new(CString rpc_url);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "model_free", CallingConvention = CallingConvention.Cdecl)]
        public static extern void model_free(Model* model);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "signing_key_new", CallingConvention = CallingConvention.Cdecl)]
        public static extern FieldElement signing_key_new();

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "signing_key_sign", CallingConvention = CallingConvention.Cdecl)]
        public static extern Result_Signature signing_key_sign(FieldElement private_key, FieldElement hash);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "string_free", CallingConvention = CallingConvention.Cdecl)]
        public static extern void string_free(CString @string);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "ty_free", CallingConvention = CallingConvention.Cdecl)]
        public static extern void ty_free(Ty* ty);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "verifying_key_new", CallingConvention = CallingConvention.Cdecl)]
        public static extern FieldElement verifying_key_new(FieldElement signing_key);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "verifying_key_verify", CallingConvention = CallingConvention.Cdecl)]
        public static extern Result_bool verifying_key_verify(FieldElement verifying_key, FieldElement hash, Signature signature);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "world_metadata_free", CallingConvention = CallingConvention.Cdecl)]
        public static extern void world_metadata_free(WorldMetadata* metadata);

        #endregion

        #region Types

        [CNode(Kind = "FunctionPointer")]
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_FieldElement_CArrayModel_Void
        {
            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public unsafe delegate void @delegate(FieldElement param, CArray_Model param2);

            public IntPtr Pointer;

            public FnPtr_FieldElement_CArrayModel_Void(@delegate d)
            {
                Pointer = Marshal.GetFunctionPointerForDelegate(d);
            }
        }

        [CNode(Kind = "FunctionPointer")]
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Void
        {
            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public unsafe delegate void @delegate();

            public IntPtr Pointer;

            public FnPtr_Void(@delegate d)
            {
                Pointer = Marshal.GetFunctionPointerForDelegate(d);
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct BlockId
        {
            [FieldOffset(0)] // size = 4
            public BlockId_Tag tag;

            [FieldOffset(8)] // size = 32
            public FieldElement hash;

            [FieldOffset(8)] // size = 8
            public ulong number;

            [FieldOffset(8)] // size = 4
            public BlockTag block_tag;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct BlockId_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 32
            public FieldElement hash;

            [FieldOffset(0)] // size = 8
            public ulong number;

            [FieldOffset(0)] // size = 4
            public BlockTag block_tag;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 1)]
        public struct BlockId_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 32
            public FieldElement hash;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct BlockId_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public ulong number;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
        public struct BlockId_ANONYMOUS_FIELD1_ANONYMOUS_FIELD2
        {
            [FieldOffset(0)] // size = 4
            public BlockTag block_tag;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArray_CHashItem______c_char__ModelMetadata
        {
            [FieldOffset(0)] // size = 8
            public CHashItem______c_char__ModelMetadata* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArray_Clause
        {
            [FieldOffset(0)] // size = 8
            public Clause* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArray_Entity
        {
            [FieldOffset(0)] // size = 8
            public Entity* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArray_EnumOption
        {
            [FieldOffset(0)] // size = 8
            public EnumOption* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArray_FieldElement
        {
            [FieldOffset(0)] // size = 8
            public FieldElement* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArray_KeysClause
        {
            [FieldOffset(0)] // size = 8
            public KeysClause* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArray_Member
        {
            [FieldOffset(0)] // size = 8
            public Member* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArray_Model
        {
            [FieldOffset(0)] // size = 8
            public Model* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArray_Ty
        {
            [FieldOffset(0)] // size = 8
            public Ty* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArray______c_char
        {
            [FieldOffset(0)] // size = 8
            public CString* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArray_u8
        {
            [FieldOffset(0)] // size = 8
            public byte* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 120, Pack = 8)]
        public struct CHashItem______c_char__ModelMetadata
        {
            [FieldOffset(0)] // size = 8
            public CString _key;

            public string key
            {
                get
                {
                    return CString.ToString(_key);
                }
                set
                {
                    _key = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 112
            public ModelMetadata value;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 104, Pack = 8)]
        public struct COption_Clause
        {
            [FieldOffset(0)] // size = 4
            public COption_Clause_Tag tag;

            [FieldOffset(8)] // size = 96
            public Clause some;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 96, Pack = 8)]
        public struct COption_Clause_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 96
            public Clause some;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 96, Pack = 8)]
        public struct COption_Clause_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 96
            public Clause some;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct COption_____Ty
        {
            [FieldOffset(0)] // size = 4
            public COption_____Ty_Tag tag;

            [FieldOffset(8)] // size = 8
            public Ty* _some;

            public Ty some
            {
                get
                {
                    return *_some;
                }
            }
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct COption_____Ty_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Ty* _some;

            public Ty some
            {
                get
                {
                    return *_some;
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct COption_____Ty_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 8
            public Ty* _some;

            public Ty some
            {
                get
                {
                    return *_some;
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct Call
        {
            [FieldOffset(0)] // size = 8
            public CString _to;

            public string to
            {
                get
                {
                    return CString.ToString(_to);
                }
                set
                {
                    _to = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 8
            public CString _selector;

            public string selector
            {
                get
                {
                    return CString.ToString(_selector);
                }
                set
                {
                    _selector = CString.FromString(value);
                }
            }

            [FieldOffset(16)] // size = 16
            public CArray_FieldElement _calldata;

            public Span<FieldElement> calldata
            {
                get
                {
                    fixed (Call* @this = &this)
                    {
                        var span = new Span<FieldElement>(@this->_calldata.data, (int)@this->_calldata.data_len);
                        return span;
                    }
                }

                set
                {

                    _calldata = new CArray_FieldElement();
                    _calldata.data_len = (UIntPtr)value.Length;
                    fixed (FieldElement* ptr = value)
                    {
                        _calldata.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 96, Pack = 8)]
        public struct Clause
        {
            [FieldOffset(0)] // size = 4
            public Clause_Tag tag;

            [FieldOffset(8)] // size = 24
            public KeysClause keys;

            [FieldOffset(8)] // size = 88
            public MemberClause c_member;

            [FieldOffset(8)] // size = 32
            public CompositeClause composite;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 88, Pack = 8)]
        public struct Clause_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 24
            public KeysClause keys;

            [FieldOffset(0)] // size = 88
            public MemberClause c_member;

            [FieldOffset(0)] // size = 32
            public CompositeClause composite;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct Clause_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 24
            public KeysClause keys;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 88, Pack = 8)]
        public struct Clause_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 88
            public MemberClause c_member;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct Clause_ANONYMOUS_FIELD1_ANONYMOUS_FIELD2
        {
            [FieldOffset(0)] // size = 32
            public CompositeClause composite;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct CompositeClause
        {
            [FieldOffset(0)] // size = 8
            public CString _model;

            public string model
            {
                get
                {
                    return CString.ToString(_model);
                }
                set
                {
                    _model = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 4
            public LogicalOperator operator_;

            [FieldOffset(16)] // size = 16
            public CArray_Clause _clauses;

            public Span<Clause> clauses
            {
                get
                {
                    fixed (CompositeClause* @this = &this)
                    {
                        var span = new Span<Clause>(@this->_clauses.data, (int)@this->_clauses.data_len);
                        return span;
                    }
                }

                set
                {

                    _clauses = new CArray_Clause();
                    _clauses.data_len = (UIntPtr)value.Length;
                    fixed (Clause* ptr = value)
                    {
                        _clauses.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 48, Pack = 8)]
        public struct Entity
        {
            [FieldOffset(0)] // size = 32
            public FieldElement hashed_keys;

            [FieldOffset(32)] // size = 16
            public CArray_Model _models;

            public Span<Model> models
            {
                get
                {
                    fixed (Entity* @this = &this)
                    {
                        var span = new Span<Model>(@this->_models.data, (int)@this->_models.data_len);
                        return span;
                    }
                }

                set
                {

                    _models = new CArray_Model();
                    _models.data_len = (UIntPtr)value.Length;
                    fixed (Model* ptr = value)
                    {
                        _models.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct Enum
        {
            [FieldOffset(0)] // size = 8
            public CString _name;

            public string name
            {
                get
                {
                    return CString.ToString(_name);
                }
                set
                {
                    _name = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 1
            public byte option;

            [FieldOffset(16)] // size = 16
            public CArray_EnumOption _options;

            public Span<EnumOption> options
            {
                get
                {
                    fixed (Enum* @this = &this)
                    {
                        var span = new Span<EnumOption>(@this->_options.data, (int)@this->_options.data_len);
                        return span;
                    }
                }

                set
                {

                    _options = new CArray_EnumOption();
                    _options.data_len = (UIntPtr)value.Length;
                    fixed (EnumOption* ptr = value)
                    {
                        _options.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct EnumOption
        {
            [FieldOffset(0)] // size = 8
            public CString _name;

            public string name
            {
                get
                {
                    return CString.ToString(_name);
                }
                set
                {
                    _name = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 8
            public Ty* _ty;

            public Ty ty
            {
                get
                {
                    return *_ty;
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Error
        {
            [FieldOffset(0)] // size = 8
            public CString _message;

            public string message
            {
                get
                {
                    return CString.ToString(_message);
                }
                set
                {
                    _message = CString.FromString(value);
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 1)]
        public struct FieldElement
        {
            [FieldOffset(0)] // size = 32
            public fixed byte _data[32]; // uint8_t[32]

            public readonly Span<byte> data
            {
                get
                {
                    fixed (FieldElement* @this = &this)
                    {
                        var pointer = &@this->_data[0];
                        var span = new Span<byte>(pointer, 32);
                        return span;
                    }
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct KeysClause
        {
            [FieldOffset(0)] // size = 8
            public CString _model;

            public string model
            {
                get
                {
                    return CString.ToString(_model);
                }
                set
                {
                    _model = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 16
            public CArray______c_char _keys;

            public Span<string> keys
            {
                get
                {
                    fixed (KeysClause* @this = &this)
                    {
                        var span = new Span<CString>(@this->_keys.data, (int)@this->_keys.data_len);
                        return span.ToArray().Select(str => CString.ToString(str)).ToArray();
                    }
                }

                set
                {
                    var strings = value.ToArray().Select(str => CString.FromString(str)).ToArray();
                    _keys = new CArray______c_char();
                    _keys.data_len = (UIntPtr)value.Length;
                    fixed (CString* ptr = strings)
                    {
                        _keys.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct Member
        {
            [FieldOffset(0)] // size = 8
            public CString _name;

            public string name
            {
                get
                {
                    return CString.ToString(_name);
                }
                set
                {
                    _name = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 8
            public Ty* _ty;

            public Ty ty
            {
                get
                {
                    return *_ty;
                }
            }

            [FieldOffset(16)] // size = 1
            public CBool key;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 88, Pack = 8)]
        public struct MemberClause
        {
            [FieldOffset(0)] // size = 8
            public CString _model;

            public string model
            {
                get
                {
                    return CString.ToString(_model);
                }
                set
                {
                    _model = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 8
            public CString _member;

            public string member
            {
                get
                {
                    return CString.ToString(_member);
                }
                set
                {
                    _member = CString.FromString(value);
                }
            }

            [FieldOffset(16)] // size = 4
            public ComparisonOperator operator_;

            [FieldOffset(24)] // size = 64
            public Value value;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct Model
        {
            [FieldOffset(0)] // size = 8
            public CString _name;

            public string name
            {
                get
                {
                    return CString.ToString(_name);
                }
                set
                {
                    _name = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 16
            public CArray_Member _members;

            public Span<Member> members
            {
                get
                {
                    fixed (Model* @this = &this)
                    {
                        var span = new Span<Member>(@this->_members.data, (int)@this->_members.data_len);
                        return span;
                    }
                }

                set
                {

                    _members = new CArray_Member();
                    _members.data_len = (UIntPtr)value.Length;
                    fixed (Member* ptr = value)
                    {
                        _members.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 112, Pack = 8)]
        public struct ModelMetadata
        {
            [FieldOffset(0)] // size = 48
            public Ty schema;

            [FieldOffset(48)] // size = 8
            public CString _name;

            public string name
            {
                get
                {
                    return CString.ToString(_name);
                }
                set
                {
                    _name = CString.FromString(value);
                }
            }

            [FieldOffset(56)] // size = 4
            public uint packed_size;

            [FieldOffset(60)] // size = 4
            public uint unpacked_size;

            [FieldOffset(64)] // size = 32
            public FieldElement class_hash;

            [FieldOffset(96)] // size = 16
            public CArray_FieldElement _layout;

            public Span<FieldElement> layout
            {
                get
                {
                    fixed (ModelMetadata* @this = &this)
                    {
                        var span = new Span<FieldElement>(@this->_layout.data, (int)@this->_layout.data_len);
                        return span;
                    }
                }

                set
                {

                    _layout = new CArray_FieldElement();
                    _layout.data_len = (UIntPtr)value.Length;
                    fixed (FieldElement* ptr = value)
                    {
                        _layout.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct Primitive
        {
            [FieldOffset(0)] // size = 4
            public Primitive_Tag tag;

            [FieldOffset(8)] // size = 1
            public byte u8;

            [FieldOffset(8)] // size = 2
            public ushort u16;

            [FieldOffset(8)] // size = 4
            public uint u32;

            [FieldOffset(8)] // size = 8
            public ulong u64;

            [FieldOffset(8)] // size = 16
            public fixed byte _u128[16]; // uint8_t[16]

            public readonly Span<byte> u128
            {
                get
                {
                    fixed (Primitive* @this = &this)
                    {
                        var pointer = &@this->_u128[0];
                        var span = new Span<byte>(pointer, 16);
                        return span;
                    }
                }
            }

            [FieldOffset(8)] // size = 32
            public fixed byte _u256[32]; // uint64_t[4]

            public readonly Span<ulong> u256
            {
                get
                {
                    fixed (Primitive* @this = &this)
                    {
                        var pointer = &@this->_u256[0];
                        var span = new Span<ulong>(pointer, 4);
                        return span;
                    }
                }
            }

            [FieldOffset(8)] // size = 4
            public uint u_size;

            [FieldOffset(8)] // size = 1
            public CBool p_bool;

            [FieldOffset(8)] // size = 32
            public FieldElement felt252;

            [FieldOffset(8)] // size = 32
            public FieldElement class_hash;

            [FieldOffset(8)] // size = 32
            public FieldElement contract_address;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct Primitive_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 1
            public byte u8;

            [FieldOffset(0)] // size = 2
            public ushort u16;

            [FieldOffset(0)] // size = 4
            public uint u32;

            [FieldOffset(0)] // size = 8
            public ulong u64;

            [FieldOffset(0)] // size = 16
            public fixed byte _u128[16]; // uint8_t[16]

            public readonly Span<byte> u128
            {
                get
                {
                    fixed (Primitive_ANONYMOUS_FIELD1* @this = &this)
                    {
                        var pointer = &@this->_u128[0];
                        var span = new Span<byte>(pointer, 16);
                        return span;
                    }
                }
            }

            [FieldOffset(0)] // size = 32
            public fixed byte _u256[32]; // uint64_t[4]

            public readonly Span<ulong> u256
            {
                get
                {
                    fixed (Primitive_ANONYMOUS_FIELD1* @this = &this)
                    {
                        var pointer = &@this->_u256[0];
                        var span = new Span<ulong>(pointer, 4);
                        return span;
                    }
                }
            }

            [FieldOffset(0)] // size = 4
            public uint u_size;

            [FieldOffset(0)] // size = 1
            public CBool p_bool;

            [FieldOffset(0)] // size = 32
            public FieldElement felt252;

            [FieldOffset(0)] // size = 32
            public FieldElement class_hash;

            [FieldOffset(0)] // size = 32
            public FieldElement contract_address;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 1, Pack = 1)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 1
            public byte u8;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 2, Pack = 2)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 2
            public ushort u16;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 1)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD10
        {
            [FieldOffset(0)] // size = 32
            public FieldElement contract_address;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD2
        {
            [FieldOffset(0)] // size = 4
            public uint u32;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD3
        {
            [FieldOffset(0)] // size = 8
            public ulong u64;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 1)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD4
        {
            [FieldOffset(0)] // size = 16
            public fixed byte _u128[16]; // uint8_t[16]

            public readonly Span<byte> u128
            {
                get
                {
                    fixed (Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD4* @this = &this)
                    {
                        var pointer = &@this->_u128[0];
                        var span = new Span<byte>(pointer, 16);
                        return span;
                    }
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD5
        {
            [FieldOffset(0)] // size = 32
            public fixed byte _u256[32]; // uint64_t[4]

            public readonly Span<ulong> u256
            {
                get
                {
                    fixed (Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD5* @this = &this)
                    {
                        var pointer = &@this->_u256[0];
                        var span = new Span<ulong>(pointer, 4);
                        return span;
                    }
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD6
        {
            [FieldOffset(0)] // size = 4
            public uint u_size;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 1, Pack = 1)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD7
        {
            [FieldOffset(0)] // size = 1
            public CBool p_bool;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 1)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD8
        {
            [FieldOffset(0)] // size = 32
            public FieldElement felt252;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 1)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD9
        {
            [FieldOffset(0)] // size = 32
            public FieldElement class_hash;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 112, Pack = 8)]
        public struct Query
        {
            [FieldOffset(0)] // size = 4
            public uint limit;

            [FieldOffset(4)] // size = 4
            public uint offset;

            [FieldOffset(8)] // size = 104
            public COption_Clause clause;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct Result_CArray_Entity
        {
            [FieldOffset(0)] // size = 4
            public Result_CArray_Entity_Tag tag;

            [FieldOffset(8)] // size = 16
            public CArray_Entity _ok;

            public Span<Entity> ok
            {
                get
                {
                    fixed (Result_CArray_Entity* @this = &this)
                    {
                        var span = new Span<Entity>(@this->_ok.data, (int)@this->_ok.data_len);
                        return span;
                    }
                }

                set
                {

                    _ok = new CArray_Entity();
                    _ok.data_len = (UIntPtr)value.Length;
                    fixed (Entity* ptr = value)
                    {
                        _ok.data = ptr;
                    }
                }
            }

            [FieldOffset(8)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct Result_CArray_Entity_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 16
            public CArray_Entity _ok;

            public Span<Entity> ok
            {
                get
                {
                    fixed (Result_CArray_Entity_ANONYMOUS_FIELD1* @this = &this)
                    {
                        var span = new Span<Entity>(@this->_ok.data, (int)@this->_ok.data_len);
                        return span;
                    }
                }

                set
                {

                    _ok = new CArray_Entity();
                    _ok.data_len = (UIntPtr)value.Length;
                    fixed (Entity* ptr = value)
                    {
                        _ok.data = ptr;
                    }
                }
            }

            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct Result_CArray_Entity_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 16
            public CArray_Entity _ok;

            public Span<Entity> ok
            {
                get
                {
                    fixed (Result_CArray_Entity_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0* @this = &this)
                    {
                        var span = new Span<Entity>(@this->_ok.data, (int)@this->_ok.data_len);
                        return span;
                    }
                }

                set
                {

                    _ok = new CArray_Entity();
                    _ok.data_len = (UIntPtr)value.Length;
                    fixed (Entity* ptr = value)
                    {
                        _ok.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Result_CArray_Entity_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct Result_COption_____Ty
        {
            [FieldOffset(0)] // size = 4
            public Result_COption_____Ty_Tag tag;

            [FieldOffset(8)] // size = 16
            public COption_____Ty ok;

            [FieldOffset(8)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct Result_COption_____Ty_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 16
            public COption_____Ty ok;

            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct Result_COption_____Ty_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 16
            public COption_____Ty ok;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Result_COption_____Ty_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct Result_FieldElement
        {
            [FieldOffset(0)] // size = 4
            public Result_FieldElement_Tag tag;

            [FieldOffset(8)] // size = 32
            public FieldElement ok;

            [FieldOffset(8)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct Result_FieldElement_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 32
            public FieldElement ok;

            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 1)]
        public struct Result_FieldElement_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 32
            public FieldElement ok;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Result_FieldElement_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 72, Pack = 8)]
        public struct Result_Signature
        {
            [FieldOffset(0)] // size = 4
            public Result_Signature_Tag tag;

            [FieldOffset(8)] // size = 64
            public Signature ok;

            [FieldOffset(8)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 64, Pack = 8)]
        public struct Result_Signature_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 64
            public Signature ok;

            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 64, Pack = 1)]
        public struct Result_Signature_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 64
            public Signature ok;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Result_Signature_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct Result_____Account
        {
            [FieldOffset(0)] // size = 4
            public Result_____Account_Tag tag;

            [FieldOffset(8)] // size = 8
            public Account* _ok;

            public Account ok
            {
                get
                {
                    return *_ok;
                }
            }

            [FieldOffset(8)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Result_____Account_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Account* _ok;

            public Account ok
            {
                get
                {
                    return *_ok;
                }
            }

            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Result_____Account_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 8
            public Account* _ok;

            public Account ok
            {
                get
                {
                    return *_ok;
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Result_____Account_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct Result_____CJsonRpcClient
        {
            [FieldOffset(0)] // size = 4
            public Result_____CJsonRpcClient_Tag tag;

            [FieldOffset(8)] // size = 8
            public CJsonRpcClient* _ok;

            public CJsonRpcClient ok
            {
                get
                {
                    return *_ok;
                }
            }

            [FieldOffset(8)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Result_____CJsonRpcClient_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public CJsonRpcClient* _ok;

            public CJsonRpcClient ok
            {
                get
                {
                    return *_ok;
                }
            }

            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Result_____CJsonRpcClient_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 8
            public CJsonRpcClient* _ok;

            public CJsonRpcClient ok
            {
                get
                {
                    return *_ok;
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Result_____CJsonRpcClient_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct Result_____ToriiClient
        {
            [FieldOffset(0)] // size = 4
            public Result_____ToriiClient_Tag tag;

            [FieldOffset(8)] // size = 8
            public ToriiClient* _ok;

            public ToriiClient ok
            {
                get
                {
                    return *_ok;
                }
            }

            [FieldOffset(8)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Result_____ToriiClient_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public ToriiClient* _ok;

            public ToriiClient ok
            {
                get
                {
                    return *_ok;
                }
            }

            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Result_____ToriiClient_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 8
            public ToriiClient* _ok;

            public ToriiClient ok
            {
                get
                {
                    return *_ok;
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Result_____ToriiClient_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct Result_bool
        {
            [FieldOffset(0)] // size = 4
            public Result_bool_Tag tag;

            [FieldOffset(8)] // size = 1
            public CBool ok;

            [FieldOffset(8)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Result_bool_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 1
            public CBool ok;

            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 1, Pack = 1)]
        public struct Result_bool_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 1
            public CBool ok;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Result_bool_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 64, Pack = 1)]
        public struct Signature
        {
            [FieldOffset(0)] // size = 32
            public FieldElement r;

            [FieldOffset(32)] // size = 32
            public FieldElement s;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct Struct
        {
            [FieldOffset(0)] // size = 8
            public CString _name;

            public string name
            {
                get
                {
                    return CString.ToString(_name);
                }
                set
                {
                    _name = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 16
            public CArray_Member _children;

            public Span<Member> children
            {
                get
                {
                    fixed (Struct* @this = &this)
                    {
                        var span = new Span<Member>(@this->_children.data, (int)@this->_children.data_len);
                        return span;
                    }
                }

                set
                {

                    _children = new CArray_Member();
                    _children.data_len = (UIntPtr)value.Length;
                    fixed (Member* ptr = value)
                    {
                        _children.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 48, Pack = 8)]
        public struct Ty
        {
            [FieldOffset(0)] // size = 4
            public Ty_Tag tag;

            [FieldOffset(8)] // size = 40
            public Primitive ty_primitive;

            [FieldOffset(8)] // size = 24
            public Struct ty_struct;

            [FieldOffset(8)] // size = 32
            public Enum ty_enum;

            [FieldOffset(8)] // size = 16
            public CArray_Ty _ty_tuple;

            public Span<Ty> ty_tuple
            {
                get
                {
                    fixed (Ty* @this = &this)
                    {
                        var span = new Span<Ty>(@this->_ty_tuple.data, (int)@this->_ty_tuple.data_len);
                        return span;
                    }
                }

                set
                {

                    _ty_tuple = new CArray_Ty();
                    _ty_tuple.data_len = (UIntPtr)value.Length;
                    fixed (Ty* ptr = value)
                    {
                        _ty_tuple.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct Ty_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 40
            public Primitive ty_primitive;

            [FieldOffset(0)] // size = 24
            public Struct ty_struct;

            [FieldOffset(0)] // size = 32
            public Enum ty_enum;

            [FieldOffset(0)] // size = 16
            public CArray_Ty _ty_tuple;

            public Span<Ty> ty_tuple
            {
                get
                {
                    fixed (Ty_ANONYMOUS_FIELD1* @this = &this)
                    {
                        var span = new Span<Ty>(@this->_ty_tuple.data, (int)@this->_ty_tuple.data_len);
                        return span;
                    }
                }

                set
                {

                    _ty_tuple = new CArray_Ty();
                    _ty_tuple.data_len = (UIntPtr)value.Length;
                    fixed (Ty* ptr = value)
                    {
                        _ty_tuple.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct Ty_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 40
            public Primitive ty_primitive;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct Ty_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 24
            public Struct ty_struct;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct Ty_ANONYMOUS_FIELD1_ANONYMOUS_FIELD2
        {
            [FieldOffset(0)] // size = 32
            public Enum ty_enum;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct Ty_ANONYMOUS_FIELD1_ANONYMOUS_FIELD3
        {
            [FieldOffset(0)] // size = 16
            public CArray_Ty _ty_tuple;

            public Span<Ty> ty_tuple
            {
                get
                {
                    fixed (Ty_ANONYMOUS_FIELD1_ANONYMOUS_FIELD3* @this = &this)
                    {
                        var span = new Span<Ty>(@this->_ty_tuple.data, (int)@this->_ty_tuple.data_len);
                        return span;
                    }
                }

                set
                {

                    _ty_tuple = new CArray_Ty();
                    _ty_tuple.data_len = (UIntPtr)value.Length;
                    fixed (Ty* ptr = value)
                    {
                        _ty_tuple.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 64, Pack = 8)]
        public struct Value
        {
            [FieldOffset(0)] // size = 40
            public Primitive primitive_type;

            [FieldOffset(40)] // size = 24
            public ValueType value_type;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct ValueType
        {
            [FieldOffset(0)] // size = 4
            public ValueType_Tag tag;

            [FieldOffset(8)] // size = 8
            public CString _v_string;

            public string v_string
            {
                get
                {
                    return CString.ToString(_v_string);
                }
                set
                {
                    _v_string = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 8
            public long int_;

            [FieldOffset(8)] // size = 8
            public ulong u_int;

            [FieldOffset(8)] // size = 1
            public CBool v_bool;

            [FieldOffset(8)] // size = 16
            public CArray_u8 _bytes;

            public Span<byte> bytes
            {
                get
                {
                    fixed (ValueType* @this = &this)
                    {
                        var span = new Span<byte>(@this->_bytes.data, (int)@this->_bytes.data_len);
                        return span;
                    }
                }

                set
                {

                    _bytes = new CArray_u8();
                    _bytes.data_len = (UIntPtr)value.Length;
                    fixed (byte* ptr = value)
                    {
                        _bytes.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ValueType_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public CString _v_string;

            public string v_string
            {
                get
                {
                    return CString.ToString(_v_string);
                }
                set
                {
                    _v_string = CString.FromString(value);
                }
            }

            [FieldOffset(0)] // size = 8
            public long int_;

            [FieldOffset(0)] // size = 8
            public ulong u_int;

            [FieldOffset(0)] // size = 1
            public CBool v_bool;

            [FieldOffset(0)] // size = 16
            public CArray_u8 _bytes;

            public Span<byte> bytes
            {
                get
                {
                    fixed (ValueType_ANONYMOUS_FIELD1* @this = &this)
                    {
                        var span = new Span<byte>(@this->_bytes.data, (int)@this->_bytes.data_len);
                        return span;
                    }
                }

                set
                {

                    _bytes = new CArray_u8();
                    _bytes.data_len = (UIntPtr)value.Length;
                    fixed (byte* ptr = value)
                    {
                        _bytes.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ValueType_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 8
            public CString _v_string;

            public string v_string
            {
                get
                {
                    return CString.ToString(_v_string);
                }
                set
                {
                    _v_string = CString.FromString(value);
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ValueType_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public long int_;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ValueType_ANONYMOUS_FIELD1_ANONYMOUS_FIELD2
        {
            [FieldOffset(0)] // size = 8
            public ulong u_int;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 1, Pack = 1)]
        public struct ValueType_ANONYMOUS_FIELD1_ANONYMOUS_FIELD3
        {
            [FieldOffset(0)] // size = 1
            public CBool v_bool;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ValueType_ANONYMOUS_FIELD1_ANONYMOUS_FIELD4
        {
            [FieldOffset(0)] // size = 16
            public CArray_u8 _bytes;

            public Span<byte> bytes
            {
                get
                {
                    fixed (ValueType_ANONYMOUS_FIELD1_ANONYMOUS_FIELD4* @this = &this)
                    {
                        var span = new Span<byte>(@this->_bytes.data, (int)@this->_bytes.data_len);
                        return span;
                    }
                }

                set
                {

                    _bytes = new CArray_u8();
                    _bytes.data_len = (UIntPtr)value.Length;
                    fixed (byte* ptr = value)
                    {
                        _bytes.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 144, Pack = 8)]
        public struct WorldMetadata
        {
            [FieldOffset(0)] // size = 32
            public FieldElement world_address;

            [FieldOffset(32)] // size = 32
            public FieldElement world_class_hash;

            [FieldOffset(64)] // size = 32
            public FieldElement executor_address;

            [FieldOffset(96)] // size = 32
            public FieldElement executor_class_hash;

            [FieldOffset(128)] // size = 16
            public CArray_CHashItem______c_char__ModelMetadata _models;

            public Span<CHashItem______c_char__ModelMetadata> models
            {
                get
                {
                    fixed (WorldMetadata* @this = &this)
                    {
                        var span = new Span<CHashItem______c_char__ModelMetadata>(@this->_models.data, (int)@this->_models.data_len);
                        return span;
                    }
                }

                set
                {

                    _models = new CArray_CHashItem______c_char__ModelMetadata();
                    _models.data_len = (UIntPtr)value.Length;
                    fixed (CHashItem______c_char__ModelMetadata* ptr = value)
                    {
                        _models.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Enum")]
        public enum BlockId_Tag : int
        {
            Hash = 0,
            Number = 1,
            BlockTag_ = 2
        }

        [CNode(Kind = "Enum")]
        public enum BlockTag : int
        {
            Latest = 0,
            Pending = 1
        }

        [CNode(Kind = "Enum")]
        public enum COption_Clause_Tag : int
        {
            Some_Clause = 0,
            None_Clause = 1
        }

        [CNode(Kind = "Enum")]
        public enum COption_____Ty_Tag : int
        {
            Some_____Ty = 0,
            None_____Ty = 1
        }

        [CNode(Kind = "Enum")]
        public enum Clause_Tag : int
        {
            Keys = 0,
            CMember = 1,
            Composite = 2
        }

        [CNode(Kind = "Enum")]
        public enum ComparisonOperator : int
        {
            Eq = 0,
            Neq = 1,
            Gt = 2,
            Gte = 3,
            Lt = 4,
            Lte = 5
        }

        [CNode(Kind = "Enum")]
        public enum LogicalOperator : int
        {
            And = 0,
            Or = 1
        }

        [CNode(Kind = "Enum")]
        public enum Primitive_Tag : int
        {
            U8 = 0,
            U16 = 1,
            U32 = 2,
            U64 = 3,
            U128 = 4,
            U256 = 5,
            USize = 6,
            PBool = 7,
            Felt252 = 8,
            ClassHash = 9,
            ContractAddress = 10
        }

        [CNode(Kind = "Enum")]
        public enum Result_CArray_Entity_Tag : int
        {
            Ok_CArray_Entity = 0,
            Err_CArray_Entity = 1
        }

        [CNode(Kind = "Enum")]
        public enum Result_COption_____Ty_Tag : int
        {
            Ok_COption_____Ty = 0,
            Err_COption_____Ty = 1
        }

        [CNode(Kind = "Enum")]
        public enum Result_FieldElement_Tag : int
        {
            Ok_FieldElement = 0,
            Err_FieldElement = 1
        }

        [CNode(Kind = "Enum")]
        public enum Result_Signature_Tag : int
        {
            Ok_Signature = 0,
            Err_Signature = 1
        }

        [CNode(Kind = "Enum")]
        public enum Result_____Account_Tag : int
        {
            Ok_____Account = 0,
            Err_____Account = 1
        }

        [CNode(Kind = "Enum")]
        public enum Result_____CJsonRpcClient_Tag : int
        {
            Ok_____CJsonRpcClient = 0,
            Err_____CJsonRpcClient = 1
        }

        [CNode(Kind = "Enum")]
        public enum Result_____ToriiClient_Tag : int
        {
            Ok_____ToriiClient = 0,
            Err_____ToriiClient = 1
        }

        [CNode(Kind = "Enum")]
        public enum Result_bool_Tag : int
        {
            Ok_bool = 0,
            Err_bool = 1
        }

        [CNode(Kind = "Enum")]
        public enum Ty_Tag : int
        {
            TyPrimitive = 0,
            TyStruct = 1,
            TyEnum = 2,
            TyTuple = 3
        }

        [CNode(Kind = "Enum")]
        public enum ValueType_Tag : int
        {
            VString = 0,
            Int = 1,
            UInt = 2,
            VBool = 3,
            Bytes = 4
        }

        [CNode(Kind = "OpaqueType")]
        [StructLayout(LayoutKind.Sequential)]
        public struct Account
        {
        }

        [CNode(Kind = "OpaqueType")]
        [StructLayout(LayoutKind.Sequential)]
        public struct CJsonRpcClient
        {
        }

        [CNode(Kind = "OpaqueType")]
        [StructLayout(LayoutKind.Sequential)]
        public struct ToriiClient
        {
        }

        #endregion
    }

}
